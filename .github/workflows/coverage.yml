name: Code Coverage

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run tests with coverage
      run: |
        # Run internal tests with coverage
        cd pkg/dcb
        go test -coverprofile=internal.out -covermode=atomic
        
        # Run external tests with coverage of the main package (from project root)
        cd ../..
        go test ./pkg/dcb/tests -coverprofile=external.out -coverpkg=./pkg/dcb/... -covermode=atomic
        
        # Extract coverage percentages
        INTERNAL_COVERAGE=$(go tool cover -func=pkg/dcb/internal.out | grep total | awk '{print $3}' | sed 's/%//')
        EXTERNAL_COVERAGE=$(go tool cover -func=external.out | grep total | awk '{print $3}' | sed 's/%//')
        
        # Use the higher coverage (external tests are more comprehensive)
        if (( $(echo "$EXTERNAL_COVERAGE > $INTERNAL_COVERAGE" | bc -l) )); then
          echo "$EXTERNAL_COVERAGE" > coverage_percentage.txt
        else
          echo "$INTERNAL_COVERAGE" > coverage_percentage.txt
        fi
        
        echo "Internal coverage: $INTERNAL_COVERAGE%"
        echo "External coverage: $EXTERNAL_COVERAGE%"
        echo "Selected coverage: $(cat coverage_percentage.txt)%"
    
    - name: Extract coverage percentage
      id: coverage
      run: |
        COVERAGE=$(cat coverage_percentage.txt)
        echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
        echo "Coverage: $COVERAGE%"
    
    - name: Update README badge
      if: github.ref == 'refs/heads/main'
      run: |
        # Determine badge color based on coverage
        COVERAGE=$(cat coverage_percentage.txt)
        if (( $(echo "$COVERAGE >= 90" | bc -l) )); then
          COLOR="brightgreen"
        elif (( $(echo "$COVERAGE >= 80" | bc -l) )); then
          COLOR="green"
        elif (( $(echo "$COVERAGE >= 70" | bc -l) )); then
          COLOR="yellow"
        elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
          COLOR="orange"
        else
          COLOR="red"
        fi
        
        # Update the badge in README.md
        sed -i "s|https://img.shields.io/badge/code%20coverage-[0-9.]*%25-[a-z]*|https://img.shields.io/badge/code%20coverage-${COVERAGE}%25-${COLOR}|g" README.md
        
        # Show what was changed
        echo "Updated coverage badge to ${COVERAGE}% (${COLOR})"
    
    - name: Commit and push changes
      if: github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update coverage badge to ${{ steps.coverage.outputs.coverage }}%"
          git push
        fi
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          pkg/dcb/internal.out
          external.out
          coverage_percentage.txt 