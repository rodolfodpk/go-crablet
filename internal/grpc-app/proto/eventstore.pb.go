// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/eventstore.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Health check request
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_proto_eventstore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{0}
}

// Health check response
type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_eventstore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Query represents a composite query with multiple conditions combined with OR logic
type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*QueryItem           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_proto_eventstore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{2}
}

func (x *Query) GetItems() []*QueryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// QueryItem represents a single atomic query condition
type QueryItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Types         []string               `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"` // Event types to match (matches OpenAPI EventTypes)
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`   // Tags to match (matches OpenAPI Tags as string array)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryItem) Reset() {
	*x = QueryItem{}
	mi := &file_proto_eventstore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryItem) ProtoMessage() {}

func (x *QueryItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryItem.ProtoReflect.Descriptor instead.
func (*QueryItem) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{3}
}

func (x *QueryItem) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *QueryItem) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// ReadOptions for controlling read behavior
type ReadOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *string                `protobuf:"bytes,1,opt,name=from,proto3,oneof" json:"from,omitempty"`            // Start reading from this event ID
	Backwards     *bool                  `protobuf:"varint,2,opt,name=backwards,proto3,oneof" json:"backwards,omitempty"` // Read backwards
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadOptions) Reset() {
	*x = ReadOptions{}
	mi := &file_proto_eventstore_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOptions) ProtoMessage() {}

func (x *ReadOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOptions.ProtoReflect.Descriptor instead.
func (*ReadOptions) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{4}
}

func (x *ReadOptions) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *ReadOptions) GetBackwards() bool {
	if x != nil && x.Backwards != nil {
		return *x.Backwards
	}
	return false
}

// ReadRequest for reading events
type ReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *Query                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Options       *ReadOptions           `protobuf:"bytes,2,opt,name=options,proto3,oneof" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_proto_eventstore_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{5}
}

func (x *ReadRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ReadRequest) GetOptions() *ReadOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// ReadResponse containing read results
type ReadResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Events                 []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	CheckpointEventId      string                 `protobuf:"bytes,2,opt,name=checkpoint_event_id,json=checkpointEventId,proto3" json:"checkpoint_event_id,omitempty"` // ID of the last event returned (if any)
	DurationInMicroseconds int64                  `protobuf:"varint,3,opt,name=duration_in_microseconds,json=durationInMicroseconds,proto3" json:"duration_in_microseconds,omitempty"`
	NumberOfMatchingEvents int32                  `protobuf:"varint,4,opt,name=number_of_matching_events,json=numberOfMatchingEvents,proto3" json:"number_of_matching_events,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_proto_eventstore_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{6}
}

func (x *ReadResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ReadResponse) GetCheckpointEventId() string {
	if x != nil {
		return x.CheckpointEventId
	}
	return ""
}

func (x *ReadResponse) GetDurationInMicroseconds() int64 {
	if x != nil {
		return x.DurationInMicroseconds
	}
	return 0
}

func (x *ReadResponse) GetNumberOfMatchingEvents() int32 {
	if x != nil {
		return x.NumberOfMatchingEvents
	}
	return 0
}

// Event represents a single event
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // EventId
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // EventType
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // Event data as JSON string
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"` // Tags as string array
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_eventstore_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{7}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Event) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// InputEvent for appending events
type InputEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // EventType
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"` // Tags as string array
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // Event data as JSON string
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputEvent) Reset() {
	*x = InputEvent{}
	mi := &file_proto_eventstore_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputEvent) ProtoMessage() {}

func (x *InputEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputEvent.ProtoReflect.Descriptor instead.
func (*InputEvent) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{8}
}

func (x *InputEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InputEvent) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *InputEvent) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// AppendCondition for conditional appends
type AppendCondition struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FailIfEventsMatch *Query                 `protobuf:"bytes,1,opt,name=fail_if_events_match,json=failIfEventsMatch,proto3,oneof" json:"fail_if_events_match,omitempty"` // Fail if events match this query
	After             *string                `protobuf:"bytes,2,opt,name=after,proto3,oneof" json:"after,omitempty"`                                                      // Only append if position is after this event ID
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AppendCondition) Reset() {
	*x = AppendCondition{}
	mi := &file_proto_eventstore_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendCondition) ProtoMessage() {}

func (x *AppendCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendCondition.ProtoReflect.Descriptor instead.
func (*AppendCondition) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{9}
}

func (x *AppendCondition) GetFailIfEventsMatch() *Query {
	if x != nil {
		return x.FailIfEventsMatch
	}
	return nil
}

func (x *AppendCondition) GetAfter() string {
	if x != nil && x.After != nil {
		return *x.After
	}
	return ""
}

// AppendRequest for appending events
type AppendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*InputEvent          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Condition     *AppendCondition       `protobuf:"bytes,2,opt,name=condition,proto3,oneof" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendRequest) Reset() {
	*x = AppendRequest{}
	mi := &file_proto_eventstore_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRequest) ProtoMessage() {}

func (x *AppendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRequest.ProtoReflect.Descriptor instead.
func (*AppendRequest) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{10}
}

func (x *AppendRequest) GetEvents() []*InputEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *AppendRequest) GetCondition() *AppendCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

// AppendResponse containing append results
type AppendResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	DurationInMicroseconds int64                  `protobuf:"varint,1,opt,name=duration_in_microseconds,json=durationInMicroseconds,proto3" json:"duration_in_microseconds,omitempty"`
	AppendConditionFailed  bool                   `protobuf:"varint,2,opt,name=append_condition_failed,json=appendConditionFailed,proto3" json:"append_condition_failed,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AppendResponse) Reset() {
	*x = AppendResponse{}
	mi := &file_proto_eventstore_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResponse) ProtoMessage() {}

func (x *AppendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventstore_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResponse.ProtoReflect.Descriptor instead.
func (*AppendResponse) Descriptor() ([]byte, []int) {
	return file_proto_eventstore_proto_rawDescGZIP(), []int{11}
}

func (x *AppendResponse) GetDurationInMicroseconds() int64 {
	if x != nil {
		return x.DurationInMicroseconds
	}
	return 0
}

func (x *AppendResponse) GetAppendConditionFailed() bool {
	if x != nil {
		return x.AppendConditionFailed
	}
	return false
}

var File_proto_eventstore_proto protoreflect.FileDescriptor

const file_proto_eventstore_proto_rawDesc = "" +
	"\n" +
	"\x16proto/eventstore.proto\x12\n" +
	"eventstore\"\x0f\n" +
	"\rHealthRequest\"(\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"4\n" +
	"\x05Query\x12+\n" +
	"\x05items\x18\x01 \x03(\v2\x15.eventstore.QueryItemR\x05items\"5\n" +
	"\tQueryItem\x12\x14\n" +
	"\x05types\x18\x01 \x03(\tR\x05types\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\"`\n" +
	"\vReadOptions\x12\x17\n" +
	"\x04from\x18\x01 \x01(\tH\x00R\x04from\x88\x01\x01\x12!\n" +
	"\tbackwards\x18\x02 \x01(\bH\x01R\tbackwards\x88\x01\x01B\a\n" +
	"\x05_fromB\f\n" +
	"\n" +
	"_backwards\"z\n" +
	"\vReadRequest\x12'\n" +
	"\x05query\x18\x01 \x01(\v2\x11.eventstore.QueryR\x05query\x126\n" +
	"\aoptions\x18\x02 \x01(\v2\x17.eventstore.ReadOptionsH\x00R\aoptions\x88\x01\x01B\n" +
	"\n" +
	"\b_options\"\xde\x01\n" +
	"\fReadResponse\x12)\n" +
	"\x06events\x18\x01 \x03(\v2\x11.eventstore.EventR\x06events\x12.\n" +
	"\x13checkpoint_event_id\x18\x02 \x01(\tR\x11checkpointEventId\x128\n" +
	"\x18duration_in_microseconds\x18\x03 \x01(\x03R\x16durationInMicroseconds\x129\n" +
	"\x19number_of_matching_events\x18\x04 \x01(\x05R\x16numberOfMatchingEvents\"S\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\"H\n" +
	"\n" +
	"InputEvent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\"\x98\x01\n" +
	"\x0fAppendCondition\x12G\n" +
	"\x14fail_if_events_match\x18\x01 \x01(\v2\x11.eventstore.QueryH\x00R\x11failIfEventsMatch\x88\x01\x01\x12\x19\n" +
	"\x05after\x18\x02 \x01(\tH\x01R\x05after\x88\x01\x01B\x17\n" +
	"\x15_fail_if_events_matchB\b\n" +
	"\x06_after\"\x8d\x01\n" +
	"\rAppendRequest\x12.\n" +
	"\x06events\x18\x01 \x03(\v2\x16.eventstore.InputEventR\x06events\x12>\n" +
	"\tcondition\x18\x02 \x01(\v2\x1b.eventstore.AppendConditionH\x00R\tcondition\x88\x01\x01B\f\n" +
	"\n" +
	"_condition\"\x82\x01\n" +
	"\x0eAppendResponse\x128\n" +
	"\x18duration_in_microseconds\x18\x01 \x01(\x03R\x16durationInMicroseconds\x126\n" +
	"\x17append_condition_failed\x18\x02 \x01(\bR\x15appendConditionFailed2\xd0\x01\n" +
	"\x11EventStoreService\x129\n" +
	"\x04Read\x12\x17.eventstore.ReadRequest\x1a\x18.eventstore.ReadResponse\x12?\n" +
	"\x06Append\x12\x19.eventstore.AppendRequest\x1a\x1a.eventstore.AppendResponse\x12?\n" +
	"\x06Health\x12\x19.eventstore.HealthRequest\x1a\x1a.eventstore.HealthResponseB$Z\"go-crablet/internal/grpc-app/protob\x06proto3"

var (
	file_proto_eventstore_proto_rawDescOnce sync.Once
	file_proto_eventstore_proto_rawDescData []byte
)

func file_proto_eventstore_proto_rawDescGZIP() []byte {
	file_proto_eventstore_proto_rawDescOnce.Do(func() {
		file_proto_eventstore_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_eventstore_proto_rawDesc), len(file_proto_eventstore_proto_rawDesc)))
	})
	return file_proto_eventstore_proto_rawDescData
}

var file_proto_eventstore_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_eventstore_proto_goTypes = []any{
	(*HealthRequest)(nil),   // 0: eventstore.HealthRequest
	(*HealthResponse)(nil),  // 1: eventstore.HealthResponse
	(*Query)(nil),           // 2: eventstore.Query
	(*QueryItem)(nil),       // 3: eventstore.QueryItem
	(*ReadOptions)(nil),     // 4: eventstore.ReadOptions
	(*ReadRequest)(nil),     // 5: eventstore.ReadRequest
	(*ReadResponse)(nil),    // 6: eventstore.ReadResponse
	(*Event)(nil),           // 7: eventstore.Event
	(*InputEvent)(nil),      // 8: eventstore.InputEvent
	(*AppendCondition)(nil), // 9: eventstore.AppendCondition
	(*AppendRequest)(nil),   // 10: eventstore.AppendRequest
	(*AppendResponse)(nil),  // 11: eventstore.AppendResponse
}
var file_proto_eventstore_proto_depIdxs = []int32{
	3,  // 0: eventstore.Query.items:type_name -> eventstore.QueryItem
	2,  // 1: eventstore.ReadRequest.query:type_name -> eventstore.Query
	4,  // 2: eventstore.ReadRequest.options:type_name -> eventstore.ReadOptions
	7,  // 3: eventstore.ReadResponse.events:type_name -> eventstore.Event
	2,  // 4: eventstore.AppendCondition.fail_if_events_match:type_name -> eventstore.Query
	8,  // 5: eventstore.AppendRequest.events:type_name -> eventstore.InputEvent
	9,  // 6: eventstore.AppendRequest.condition:type_name -> eventstore.AppendCondition
	5,  // 7: eventstore.EventStoreService.Read:input_type -> eventstore.ReadRequest
	10, // 8: eventstore.EventStoreService.Append:input_type -> eventstore.AppendRequest
	0,  // 9: eventstore.EventStoreService.Health:input_type -> eventstore.HealthRequest
	6,  // 10: eventstore.EventStoreService.Read:output_type -> eventstore.ReadResponse
	11, // 11: eventstore.EventStoreService.Append:output_type -> eventstore.AppendResponse
	1,  // 12: eventstore.EventStoreService.Health:output_type -> eventstore.HealthResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_eventstore_proto_init() }
func file_proto_eventstore_proto_init() {
	if File_proto_eventstore_proto != nil {
		return
	}
	file_proto_eventstore_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_eventstore_proto_msgTypes[5].OneofWrappers = []any{}
	file_proto_eventstore_proto_msgTypes[9].OneofWrappers = []any{}
	file_proto_eventstore_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_eventstore_proto_rawDesc), len(file_proto_eventstore_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_eventstore_proto_goTypes,
		DependencyIndexes: file_proto_eventstore_proto_depIdxs,
		MessageInfos:      file_proto_eventstore_proto_msgTypes,
	}.Build()
	File_proto_eventstore_proto = out.File
	file_proto_eventstore_proto_goTypes = nil
	file_proto_eventstore_proto_depIdxs = nil
}
